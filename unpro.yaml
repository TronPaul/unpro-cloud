unpro:
  template_path: templates
  region: us-east-1
  stacks:
    public-subnet:
      description: unpro public stack
      parameters:
        KeyName:
          description: Name of an existing EC2 KeyPair to enable SSH access to the instances
          type: String
          minLength: 1
          maxLength: 64
          allowedPattern: '[-_ a-zA-Z0-9]*'
          constraintDescription: can contain only alphanumeric characters, spaces, dashes and underscores.
          default: teamunpro
        VPCCidr:
          description: VPC Cidr
          type: String
          default: 10.0.0.0/16
        NATEIPAllocationId:
          description: EIPAllocationId to use for the NAT
          type: String
          default: eipalloc-a4f14fc1
        MumbleEIPAllocationId:
          description: EIPAllocationId to use for mumble
          type: String
          default: eipalloc-a3f092c6
        App01EIPAllocationId:
          description: EIPAllocationId to use for the App01 (znc)
          type: String
          default: eipalloc-a2f092c7
        PublicSubnetCidr:
          description: Address range for a public subnet to be created in AZ.
          type: String
          default: 10.0.0.0/24
        PrivateSubnetCidr:
          description: Address range for a private subnet to be created in AZ.
          type: String
          default: 10.0.1.0/24
        NATNodeInstanceType:
          description: Instance type for NAT nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
        MumbleNodeInstanceType:
          description: Instance type for Mumble nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
        AppNodeInstanceType:
          description: Instance type for app nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
        AvailablityZone:
          description: AZ to use for PublicSubnet/PrivateSubnet.
          type: String
          default: us-east-1c
      mappings:
        UNPROAMI:
          us-east-1:
            AMI: ami-1ad5d372
        NATAMI:
          us-east-1:
            AMI: ami-6e9e4b06
      resource_chunk: public_chunk.json
      resources:
        PublicSubnet:
          template: subnet.yaml.jinja
          variables:
            cidr_name: PublicSubnetCidr
            network: Public
        PrivateSubnet:
          template: subnet.yaml.jinja
          variables:
            cidr_name: PrivateSubnetCidr
            network: Private
        PublicRouteTable:
          template: route_table.yaml.jinja
          variables:
            network: Public
        PrivateRouteTable:
          template: route_table.yaml.jinja
          variables:
            network: Private
        PrivateRoute:
          template: route.yaml.jinja
          variables:
            dest_cidr: 0.0.0.0/0
            route_table: PrivateRouteTable
            network_interface: NATNetworkInterface
        PublicSubnetRTAssoc:
          template: route_table_assoc.yaml.jinja
          variables:
            prefix: Public
        PrivateSubnetRTAssoc:
          template: route_table_assoc.yaml.jinja
          variables:
            prefix: Private
        EgressSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow all outbound traffic
            egress_rules:
              - protocol: -1
        PublicSSHSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow SSH from remote
            ingress_rules:
              - protocol: tcp
                port: 22
        PrivateSSHSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow SSH from local nodes
            ingress_rules:
              - protocol: tcp
                port: 22
                cidr: {Ref: VPCCidr}
        NATSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow nat traffic
            ingress_rules:
              - protocol: -1
                cidr: {Ref: PrivateSubnetCidr}
        NATNetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PublicSubnet
            security_groups:
              - NATSecurityGroup
              - PublicSSHSecurityGroup
              - EgressSecurityGroup
            source_dest: false
            tags:
              Network: Public
        NATEIPAssociation:
          template: eip_association.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            alloc_id: NATEIPAllocationId
            interface: NATNetworkInterface
        NATInstanceProfile:
          template: instance_profile.yaml.jinja
          variables:
            roles:
              - NATInstance
        NATInstance:
          template: instance.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            instance_type: NATNodeInstanceType
            instance_profile: NATInstanceProfile
            network_interfaces:
              - NATNetworkInterface
            image_map: NATAMI
            name: nat
            roles:
              - aws_nat
            tags:
              Network: Public
        NATPrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: nat.teamunpro.
            instance: NATInstance
            property: PrivateDnsName
        MumbleSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow mumble ports
            ingress_rules:
              - protocol: tcp
                port: 64738
              - protocol: udp
                port: 64738
        MumbleNetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PublicSubnet
            security_groups:
              - EgressSecurityGroup
              - PrivateSSHSecurityGroup
              - MumbleSecurityGroup
            tags:
              Network: Public
        MumbleEIPAssociation:
          template: eip_association.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            alloc_id: MumbleEIPAllocationId
            interface: MumbleNetworkInterface
        MumbleInstanceProfile:
          template: instance_profile.yaml.jinja
          variables:
            roles:
              - MumbleInstance
        MumbleInstance:
          template: instance.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            instance_type: MumbleNodeInstanceType
            instance_profile: MumbleInstanceProfile
            network_interfaces:
              - MumbleNetworkInterface
            image_map: UNPROAMI
            name: mumble
            roles:
              - voice_server
            has_salt: True
            tags:
              Network: Public
        MumblePrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_: teamunpro.
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: mumble.teamunpro.
            instance: MumbleInstance
            property: PrivateDnsName
        MumblePublicDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_name: teamunpro.com.
            type: A
            name: mumble.teamunpro.com
            instance: MumbleInstance
            property: PublicIp
        IrcSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow ZNC traffic
            ingress_rules:
              - protocol: tcp
                port: 6667
        App01NetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PublicSubnet
            security_groups:
              - EgressSecurityGroup
              - PrivateSSHSecurityGroup
              - IrcSecurityGroup
            tags:
              Network: Public
        App01EIPAssociation:
          template: eip_association.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            alloc_id: App01EIPAllocationId
            interface: App01NetworkInterface
        App01InstanceProfile:
          template: instance_profile.yaml.jinja
          variables:
            roles:
              - App01Instance
        App01Instance:
          template: instance.yaml.jinja
          variables:
            depends_on: GatewayToInternet
            instance_type: AppNodeInstanceType
            instance_profile: App01InstanceProfile
            network_interfaces:
              - App01NetworkInterface
            image_map: UNPROAMI
            name: app-01
            roles:
             - irc_bouncer
            has_salt: True
            tags:
              Network: Public
        App01PrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: app-01.teamunpro.
            instance: App01Instance
            property: PrivateDnsName
        ZncPublicDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_name: teamunpro.com.
            type: A
            name: znc.teamunpro.com
            instance: App01Instance
            property: PublicIp
    vpn:
      description: unpro vpn stack
      parameters:
        KeyName:
          description: Name of an existing EC2 KeyPair to enable SSH access to the instances
          type: String
          minLength: 1
          maxLength: 64
          allowedPattern: '[-_ a-zA-Z0-9]*'
          constraintDescription: can contain only alphanumeric characters, spaces, dashes and underscores.
          default: teamunpro
        VPNEIPAllocationId:
          description: EIPAllocationId to use for the VPN
          type: String
          default: eipalloc-bdf092d8
        VPC:
          type: String
          source:
            stack: public-subnet
            type: resource
        PublicSubnet:
          type: String
          source:
            stack: public-subnet
            type: resource
        PrivateRouteTable:
          type: String
          source:
            stack: public-subnet
            type: resource
        PublicRouteTable:
          type: String
          source:
            stack: public-subnet
            type: resource
        TeamUnproHostedZone:
          type: String
          source:
            stack: public-subnet
            type: resource
        PrivateSSHSecurityGroup:
          type: String
          source:
            stack: public-subnet
            type: resource
        EgressSecurityGroup:
          type: String
          source:
            stack: public-subnet
            type: resource
        VPNCidr: 
          type: String
          default: 10.1.0.0/24
        VPNNodeInstanceType:
          description: Instance type for VPN nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
      mappings:
        UNPROAMI:
          us-east-1:
            AMI: ami-1ad5d372
      resources:
        VPNPublicRoute:
          template: route.yaml.jinja
          variables:
            dest_cidr: {Ref: VPNCidr}
            route_table: PublicRouteTable
            network_interface: VPNNetworkInterface
        VPNPrivateRoute:
          template: route.yaml.jinja
          variables:
            dest_cidr: {Ref: VPNCidr}
            route_table: PrivateRouteTable
            network_interface: VPNNetworkInterface
        VPNSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow VPN traffic
            ingress_rules:
              - protocol: udp
                port: 1194
        VPNNetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PublicSubnet
            security_groups:
              - EgressSecurityGroup
              - PrivateSSHSecurityGroup
              - VPNSecurityGroup
            tags:
              Network: Public
        VPNEIPAssociation:
          template: eip_association.yaml.jinja
          variables:
            alloc_id: VPNEIPAllocationId
            interface: VPNNetworkInterface
        VPNInstanceProfile:
          template: instance_profile.yaml.jinja
          variables:
            roles:
              - VPNInstance
        VPNInstance:
          template: instance.yaml.jinja
          variables:
            instance_type: VPNNodeInstanceType
            instance_profile: VPNInstanceProfile
            network_interfaces:
              - VPNNetworkInterface
            image_map: UNPROAMI
            name: vpn
            roles:
             - vpn_server
            has_salt: True
            tags:
              Network: Public
        VPNPrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: vpn.teamunpro.
            instance: VPNInstance
            property: PrivateDnsName
        VPNPublicDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_name: teamunpro.com.
            type: A
            name: vpn.teamunpro.com
            instance: VPNInstance
            property: PublicIp
    sensu:
      description: unpro sensu stack
      parameters:
        KeyName:
          description: Name of an existing EC2 KeyPair to enable SSH access to the instances
          type: String
          minLength: 1
          maxLength: 64
          allowedPattern: '[-_ a-zA-Z0-9]*'
          constraintDescription: can contain only alphanumeric characters, spaces, dashes and underscores.
          default: teamunpro
        VPC:
          type: String
          source:
            stack: public-subnet
            type: resource
        PrivateSubnet:
          type: String
          source:
            stack: public-subnet
            type: resource
        TeamUnproHostedZone:
          type: String
          source:
            stack: public-subnet
            type: resource
        PrivateSSHSecurityGroup:
          type: String
          source:
            stack: public-subnet
            type: resource
        EgressSecurityGroup:
          type: String
          source:
            stack: public-subnet
            type: resource
        RabbitMqNodeInstanceType:
          description: Instance type for VPN nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
        SensuNodeInstanceType:
          description: Instance type for VPN nodes.
          type: String
          default: t2.micro
          allowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
          constraintDescription: must be a valid EC2 instance type.
      mappings:
        UNPROAMI:
          us-east-1:
            AMI: ami-1ad5d372
      resource_chunk: sensu_chunk.json
      resources:
        RabbitMqSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow rabbitmq traffic
            ingress_rules:
              - protocol: tcp
                port: 5672
              - protocol: tcp
                port: 15672
              - protocol: tcp
                port: 4369
              - protocol: tcp
                port: 25672
        RabbitMq01NetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PrivateSubnet
            security_groups:
              - EgressSecurityGroup
              - PrivateSSHSecurityGroup
              - RabbitMqSecurityGroup
            tags:
              Network: Private
        RabbitMq01Instance:
          template: instance.yaml.jinja
          variables:
            instance_type: RabbitMqNodeInstanceType
            network_interfaces:
              - RabbitMq01NetworkInterface
            image_map: UNPROAMI
            name: rabbitmq-01
            roles:
             - rabbitmq
            has_salt: True
            tags:
              Network: Private
        RabbitMq01PrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: rabbitmq-01.teamunpro.
            instance: RabbitMq01Instance
            property: PrivateDnsName
        SensuSecurityGroup:
          template: security_group.yaml.jinja
          variables:
            description: Allow rabbitmq traffic
            ingress_rules:
              - protocol: tcp
                port: 4567
              - protocol: tcp
                port: 8080
        SensuNetworkInterface:
          template: network_interface.yaml.jinja
          variables:
            subnet: PrivateSubnet
            security_groups:
              - EgressSecurityGroup
              - PrivateSSHSecurityGroup
              - SensuSecurityGroup
            tags:
              Network: Private
        SensuInstance:
          template: instance.yaml.jinja
          variables:
            instance_type: SensuNodeInstanceType
            network_interfaces:
              - SensuNetworkInterface
            image_map: UNPROAMI
            name: sensu
            roles:
             - monitor_master
            has_salt: True
            tags:
              Network: Private
        SensuPrivateDNSRecord:
          template: dns_record.yaml.jinja
          variables:
            zone_ref: TeamUnproHostedZone
            type: CNAME
            name: sensu.teamunpro.
            instance: SensuInstance
            property: PrivateDnsName
